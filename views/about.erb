<!DOCTYPE HTML>

<html lang='en-us' dir='ltr'>

<head>

  <meta charset='utf-8'>

  <meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'>
  
  <title>w&nbsp;a&nbsp;y&nbsp;s&nbsp;&nbsp;i&nbsp;n&nbsp;n&nbsp;e&nbsp;r&nbsp;&nbsp;p&nbsp;a&nbsp;s&nbsp;s</title>
  <link rel="shortcut icon" href="/ico/favicon.ico"/>

  <link rel="stylesheet" href="//yui.yahooapis.com/pure/0.4.2/base-min.css"> <!-- Normalize! A slick css reset -->
  <link rel="stylesheet" href="/css/grids.css" type="text/css"/> <!-- Custom grid framework skriit -->
  <link rel="stylesheet" href="/css/main.css" type="text/css"/> <!-- main css-->

  <!-- Please don't add 'maximum-scale=1' here. It's bad for accessibility. -->
  <meta name='viewport' content='width=device-width, initial-scale=1'>

  <!-- Load jQuery + ui from public cdn -->
  <script src="//code.jquery.com/jquery-2.1.0.min.js"></script>
  <script src="//code.jquery.com/ui/1.10.4/jquery-ui.min.js"></script>
  <script>
    $(function() {
      $('.drag').draggable();
      $('#back-sketch').click(function() {
        $('.info').fadeToggle(300);
        $('footer').fadeToggle(300);
      });
    });
  </script>

  <!-- Load paperscript from a public cdn -->
  <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/paper.js/0.9.12/paper-full.min.js"></script>
  <script type="text/paperscript" canvas="footer-logo">
    // DA CIRCULATOR
    var shape = new Shape.Circle(new Point(30, 18), 13);
    shape.fillColor = 'black';
    // DA PLANE OF BUTTS
    var path = new Path();
    // Give the stroke a color
    path.fillColor = 'black';
    var start = new Point(0, 52);
    // Move to start and draw a line from there
    path.moveTo(start);
    path.lineTo(start + [ 10, -12 ]);
    path.lineTo(start + [ 50, -12 ]);
    path.lineTo(start + [ 60, 0 ]);
  </script>
  <script type="text/paperscript" canvas="back-sketch">
	// Code ported to Paper.js from http://the389.com/9/1/
	// with permission.
	
	var values = {
		friction: 0.8,
		timeStep: 0.01,
		amount: 15,
		mass: 2,
		count: 0
	};
	values.invMass = 1 / values.mass;
	
	var path, springs;
	var size = view.size * [1.2, 1];
	
	var Spring = function(a, b, strength, restLength) {
		this.a = a;
		this.b = b;
		this.restLength = restLength || 80;
		this.strength = strength ? strength : 0.55;
		this.mamb = values.invMass * values.invMass;
	};
	
	Spring.prototype.update = function() {
		var delta = this.b - this.a;
		var dist = delta.length;
		var normDistStrength = (dist - this.restLength) /
				(dist * this.mamb) * this.strength;
		delta.y *= normDistStrength * values.invMass * 0.2;
		if (!this.a.fixed)
			this.a.y += delta.y;
		if (!this.b.fixed)
			this.b.y -= delta.y;
	};
	
	
	function createPath(strength) {
		var path = new Path({
			fillColor: 'black'
		});
		springs = [];
		for (var i = 0; i <= values.amount; i++) {
			var segment = path.add(new Point(i / values.amount, 0.5) * size);
			var point = segment.point;
			if (i == 0 || i == values.amount)
				point.y += size.height;
			point.px = point.x;
			point.py = point.y;
			// The first two and last two points are fixed:
			point.fixed = i < 2 || i > values.amount - 2;
			if (i > 0) {
				var spring = new Spring(segment.previous.point, point, strength);
				springs.push(spring);
			}
		}
		path.position.x -= size.width / 4;
		return path;
	}
	
	function onResize() {
		if (path)
			path.remove();
		size = view.bounds.size * [2, 1];
		path = createPath(0.1);
	}
	
	function onMouseMove(event) {
		var location = path.getNearestLocation(event.point);
		var segment = location.segment;
		var point = segment.point;
	
		if (!point.fixed && location.distance < size.height / 4) {
			var y = event.point.y;
			point.y += (y - point.y) / 6;
			if (segment.previous && !segment.previous.fixed) {
				var previous = segment.previous.point;
				previous.y += (y - previous.y) / 24;
			}
			if (segment.next && !segment.next.fixed) {
				var next = segment.next.point;
				next.y += (y - next.y) / 24;
			}
		}
	}
	
	function onFrame(event) {
		updateWave(path);
	}
	
	function updateWave(path) {
		var force = 1 - values.friction * values.timeStep * values.timeStep;
		for (var i = 0, l = path.segments.length; i < l; i++) {
			var point = path.segments[i].point;
			var dy = (point.y - point.py) * force;
			point.py = point.y;
			point.y = Math.max(point.y + dy, 0);
		}
	
		for (var j = 0, l = springs.length; j < l; j++) {
      springs[j].update();
    }
		path.smooth();
	}
	
	function onKeyDown(event) {
		if (event.key == 'space') {
			path.fullySelected = !path.fullySelected;
			path.fillColor = path.fullySelected ? null : 'black';
		}
	}
  </script>
</head>

<body>

  <canvas id='back-sketch' resize></canvas>

  <div class="info drag">
    <h2 class="title">about</h2>
    <p>we rule.</p>
    <p>what's our mission statement again?</p>
    <p>(for a good time, try hitting space)</p>
  </div>

  <footer id='footer'>
    <nav>
      <ul>
        <li class='flank'><a href='/cart'>cart (3)</a>
        <li id='logo'><a href='/home'><canvas id='footer-logo'></canvas></a>
        <li class='flank right'><a href='/about'>about</a><a href='https://twitter.com/waysinnerpass'>twitter</a><a href='https://soundcloud.com/waysinnerpass'>soundcloud</a>
      </ul>
    </nav>
  </footer>

</body>

</html>
