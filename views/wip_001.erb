<script src="/js/lib/svg.js"></script>
<script src="/js/lib/svg.filter.min.js"></script>
<script src="//w.soundcloud.com/player/api.js"></script>
<style>
  img {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
  }
  object {
    fill: black;
  }
</style>
<!--<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
   viewBox="0 0 792 152" enable-background="new 0 0 792 152" xml:space="preserve"><path fill="#F05346" d="M213.1,152C121.6,152,60,123,0,90l61.5-28.5c59,32.5,98.6,48.5,151.6,48.5s93.1-16.5,152.1-48.5
        C425.2,29,486.8,0,578.8,0c91.6,0,153.1,29,213.1,62l-61,28c-75.5-40.5-110.6-48-152.1-48c-53,0-93.1,16.5-152.1,48.5
        C366.7,123,305.2,152,213.1,152z"/></svg>-->

<script type='text/javascript'>

  const SIDE_A = 0,
        SIDE_B = 1;

  var bgd = new Array(),
      center_x,
      center_y,
      source,
      gain,
      squiggles = Array(),
      nowPlaying,
      sideA_duration = 1680039;
      sideB_duration = 1708042;
      sideA_buckets = [0,357,842,1375];
      sideB_buckets = [0,560,1590];
      releaseDuration = sideA_duration + sideB_duration;


$(function() {
  draw = SVG('drawing').size(window.innerWidth, window.innerHeight);

  $('body').css('overflow','hidden');


  // TO DO: make the squiggle tht correspons with track number invisible

  for (var i = 0; i < 2; i++) {
    bgd[i] = $('<img>', {
      src: 'https://s3.amazonaws.com/wip-static/digital-artwork/WIP-001/WIP001-digital-background-2.png',
      style: 'opacity: 0; z-index: ' + -(i + 1)
    });
    $('#drawing').append(bgd[i]);
    bgd[i].load(function() {

      center_x = window.innerWidth/2 - $(this).width()/2 ;
      center_y = window.innerHeight/2 - $(this).height()/2;
      $(this).css('webkitTransform', 'translate3d(' + center_x + 'px,' + center_y + 'px,0px)');
      $(this).fadeTo(10000,0.6);
    });
  }

  widgetFrame = $('iframe')[0];
  widget = SC.Widget(widgetFrame);
  setWidgetToLoop(widget, sideB_duration);

  widget.bind(SC.Widget.Events.READY, function(){
    initSquigglesAndAudio(widget);
    requestAnimationFrame(drawz);
  });


});

function setWidgetToLoop(someWidget, lastTrackDuration){
  someWidget.bind(SC.Widget.Events.FINISH, function(){
    someWidget.isPaused(function(paused){
      if(paused){
        someWidget.skip(0);
      }
    });
  });
}

function initSquigglesAndAudio(widget) {
  releaseStartTime = (Date.now() % releaseDuration);

  if(releaseStartTime < sideA_duration){
    toPlayIndex = 0;
    toPlaySeektime = releaseStartTime;
  }else{
    toPlayIndex = 1;
    toPlaySeektime = (releaseStartTime - sideA_duration);
  }

  widget.bind(SC.Widget.Events.PLAY, function(){
    widget.seekTo(toPlaySeektime);
  });

  widget.bind(SC.Widget.Events.SEEK, function(){
    widget.unbind(SC.Widget.Events.PLAY);
  });

  widget.skip(toPlayIndex);
  initSquiggles(toPlaySeektime/1000, toPlayIndex);
}

function initSquiggles(audioCurrentTime, nowPlayingSide){
  for (var i = 0; i < 7; i++) {
    squiggles[i] = draw.path('M213.1,152C121.6,152,60,123,0,90l61.5-28.5c59,32.5,98.6,48.5,151.6,48.5s93.1-16.5,152.1-48.5 C425.2,29,486.8,0,578.8,0c91.6,0,153.1,29,213.1,62l-61,28c-75.5-40.5-110.6-48-152.1-48c-53,0-93.1,16.5-152.1,48.5 C366.7,123,305.2,152,213.1,152z');
    squiggles[i].size(800, 110);
    var squigMargin = squiggles[i].height()*3/4;
    var squigx = window.innerWidth-3*squiggles[i].width()/6;
    var squigy =  window.innerHeight-squiggles[i].height()-(squigMargin*i)-40;
    squiggles[i].move(squigx, squigy);
    squiggles[i].attr({ fill: '#fff' });

    if(shouldShowSquig(i, audioCurrentTime, nowPlayingSide)){
      squiggles[i].opacity(1);
    }else{
      squiggles[i].opacity(0);
    }
  }
}

function updateSquiggles(audioCurrentTime, nowPlayingSide) {
  for(var i = 0; i < 7; i++) {
    if(shouldShowSquig(i, audioCurrentTime, nowPlayingSide)){
      squiggles[i].opacity(1);
    }else{
      squiggles[i].opacity(0);
    }
  }
}

function shouldShowSquig(i, time, which_side){
  if(which_side == SIDE_A){
    if(i > 3){
      return false;
    }else{
      return sideA_buckets[i] <= time;
    }
  }else if(which_side == SIDE_B){
    if(i <= 3){
      return true;
    }else{
      return sideB_buckets[i-4] <= time;
    }
  }
}


var time,
    t;
    hz1i = 100 + Math.random(50);
    hz2i = 100 + Math.random(50);

function drawz() {
    requestAnimationFrame(drawz);
    var now = new Date().getTime(),
        dt = now - (time || now);
    time = now;

    t = dt/1000 + (t || 0);

    hz1 = 90*Math.sin(10*t);
    hz2 = 90*Math.sin(-10*t);

    bigscale = 1.5 - 1*Math.cos(2*Math.PI*t/200);
    factor = 30;
    s1 = bigscale+(factor+Math.sin(2*Math.PI*t/12))/factor;
    s2 = bigscale+(factor+Math.cos(2*Math.PI*t/9))/factor;

    r = 1.6 - 1.5*Math.cos(2*Math.PI*t/15);

    spinrate = (100 - 90*Math.cos(2*Math.PI*t/1000))/100;
    spin_x = r*Math.sin(2*Math.PI*t*spinrate);
    spin_y = r*Math.cos(2*Math.PI*t*spinrate);

    bigspin = 300;
    bigspinrate = Math.PI/2 + 2*Math.PI*t/300;
    ax = bigspin*Math.sin(bigspinrate) + spin_x + center_x;
    ay = bigspin*Math.cos(bigspinrate) + spin_y + center_y;
    bx = bigspin*Math.sin(bigspinrate) - spin_x + center_x;
    by = bigspin*Math.cos(bigspinrate) - spin_y + center_y;

    bgd[0].css('webkitTransform', 'translate3d(' + ax + 'px,' + ay + 'px,0px) scale(' + s1 + ')');
    bgd[1].css('webkitTransform', 'translate3d(' + bx + 'px,' + by + 'px,0px) scale(' + s2 + ')');
    bgd[0].css('transform', 'translate3d(' + ax + 'px,' + ay + 'px,0px) scale(' + s1 + ')');
    bgd[1].css('transform', 'translate3d(' + bx + 'px,' + by + 'px,0px) scale(' + s2 + ')');

    widget.getCurrentSoundIndex(function(soundIndex) {
      widget.getPosition(function(pos) {
        updateSquiggles(pos/1000, soundIndex);
      });
    });
}

// 37 = left, 38 = up, 39 = right, 40 = down
var keyCode = [];
var threetwenty = false;
var flac = false;
$(window).keydown(function(e) {
    var key = e.which;
    if (key == 51) {
      threetwenty = true;
    }
    if (key == 70) {
      flac = true;
    }
    keyCode.push(key);
    if (keyCode.length > 4) {
      keyCode.splice(0, 1);
    }
    if (keyCode[0] == 38 && keyCode[1] == 39 && keyCode[2] == 40 && keyCode[3] == 37) {
      if (threetwenty) {
        window.location.href = 'https://s3.amazonaws.com/wip-static/releases/WIP001-DREAMPETER-SNAKESEATINGSNAKES-MP3320.zip';
      } else if (flac) {
        window.location.href = 'https://s3.amazonaws.com/wip-static/releases/WIP001-DREAMPETER-SNAKESEATINGSNAKES-FLAC.zip';
      } else {
        window.location.href = 'https://s3.amazonaws.com/wip-static/releases/WIP001-DREAMPETER-SNAKESEATINGSNAKES-MP3V0.zip';
      }
      threetwenty = false;
      flac = false;
    }
});
$(window).keyup(function(e) {
  var key = e.which;
  if (key == 51) { // 51 = key "3"
    threetwenty = false;
  }
  if (key == 70) { // 70 = key "F"
    flac = false;
  }
});
</script>

<iframe style='display:none' width="100%" height="300" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/66070489%3Fsecret_token%3Ds-LQW2a&amp;start_track=1&amp;t=50000&amp;hide_related=false&amp;show_comments=false&amp;show_user=false&amp;show_reposts=false&amp;visual=false"></iframe>
<div id="drawing">
</div>
